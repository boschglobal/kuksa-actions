
name: Checking dependencies with dash-license tool
description: Check an input file via dash, and archive report. Print output in build step summary. Requires wget and will install JRE on the runner

inputs:
  dashinput:
    required: true
    description: "Dash Input file"
  dashproject:
    required: false
    description: "Dash project, only required when creating tickets in Eclipse IP review system."
    default: "automotive.kuksa"
  dashtoken:
    required: false
    description: "Token for dash. If given, this action will create tickets in Eclipse IP rewiew system if required."


runs:
  using: "composite"
  steps:
    - uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'
    - name: "Run Dash"
      shell: bash
      run: |
        wget -O dash.jar "https://repo.eclipse.org/service/local/artifact/maven/redirect?r=dash-licenses&g=org.eclipse.dash&a=org.eclipse.dash.licenses&v=LATEST"
        
        if [[ -n "${{ inputs.dashtoken }}" ]]; then
            echo -e "Dash token available. Will create tickets when required. \n " >> $GITHUB_STEP_SUMMARY
            java -jar dash.jar -summary ${{ inputs.dashinput }}.report -project automotive.kuksa -token ${{ inputs.dashtoken }} -review  ${{ inputs.dashinput }} > ${{ inputs.dashinput }}.out 2>&1 || true
        else
            echo -e "Dash token not available. Will perform checking only. \n " >> $GITHUB_STEP_SUMMARY
            java -jar dash.jar -summary ${{ inputs.dashinput }}.report  ${{ inputs.dashinput }} > ${{ inputs.dashinput }}.out 2>&1 || true
        fi

        echo -e "Dash output: \n\`\`\` " >> $GITHUB_STEP_SUMMARY
        cat ${{ inputs.dashinput }}.out >> $GITHUB_STEP_SUMMARY
        echo -e "\n\`\`\`"
        DASH_NAME_FULL=${{ inputs.dashinput }}
        echo "DASH_NAME=${DASH_NAME_FULL##*/}" >> $GITHUB_ENV
    
    - name: "Archive dash artifacts"
      uses: actions/upload-artifact@v4
      with:
        # Name shall be unique to avoid conflicts if action is called multiple times
        # from the same workflow
        name: Dash Report - ${{env.DASH_NAME}}
        path: |
         ${{ inputs.dashinput }}
         ${{ inputs.dashinput }}.report
         ${{ inputs.dashinput }}.out
